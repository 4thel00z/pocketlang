/*
 *  Copyright (c) 2021 Thakee Nathees
 *  Licensed under: MIT License
 */

/** A template header to emulate C++ template and every occurence of 
 * M__NAME will be replaced by the name of the buffer and M__TYPE will be
 * replaced by the element type of the buffer (by a pre compile script) */

typedef struct {
  M__TYPE* data;
  uint32_t count;
  uint32_t capacity;
} M_CONC(M__NAME, Buffer);

// Initialize a new buffer int instance.
void M_CONC(M__NAME_L,BufferInit)(M_CONC(M__NAME, Buffer)* self);

// Clears the allocated elementes from the VM's realloc function.
void M_CONC(M__NAME_L,BufferClear)(M_CONC(M__NAME, Buffer)* self, MSVM* vm);

// Fill the buffer at the end of it with provided data if the capacity isn't
// enough using VM's realloc function.
void M_CONC(M__NAME_L,BufferFill)(M_CONC(M__NAME, Buffer)* self, MSVM* vm, M__TYPE data, int count);

// Write to the buffer with provided data at the end of the buffer.
void M_CONC(M__NAME_L,BufferWrite)(M_CONC(M__NAME, Buffer)* self, MSVM* vm, M__TYPE data);
